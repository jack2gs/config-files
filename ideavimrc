""" Leader key
let mapleader=" "

""" Basic
set clipboard+=unnamed
map ga <Action>(GotoAction)

set smartcase
set incsearch
set hlsearch

" Reload config files
noremap <leader>sc :source ~/.ideavimrc<CR>

""" Which-key setup
set which-key 
set notimeout
let g:WhichKey_ShowVimActions = "true"
let g:WhichKey_ShowTypedSequence = "true"

""" Buffer/File
map <leader>ff <action>(GotoFile)
map <leader>fr <action>(RecentFiles)
map <leader>fl <action>(RecentLocations)
map <leader>fs <action>(NewScratchFile)

""" Search and replace
map /               <Action>(Find)
map <leader>/       <Action>(FindInPath)
map <leader>ss      <Action>(Replace)
map <leader>S       <Action>(ReplaceInPath)

""" Editing 
"Ctrl+Shift+up move line above
map <C-S-Up> :m -2<CR>
"Ctrl+Shift+down move line below
map <C-S-Down> :m +1<CR>
"Ctrl+Shift+Alt-up move line above
map <C-S-A-Up> <Action>(MoveStatementUp) 
"Ctrl+Shift+Alt-down move line below
map <C-S-A-Down> <Action>(MoveStatementDown) 

""" Tab navigation
noremap <A-n> :tabnext<CR>
noremap <A-p> :tabprev<CR>
map <leader>qq <Action>(CloseContent)
map <leader>qa <Action>(CloseAllEditors)

""" Window management
" Pane navigation
map <A-h> <C-w>h
map <A-l> <C-w>l
map <A-k> <C-w>k
map <A-j> <C-w>j
" Window splits
map <leader>wv <Action>(SplitVertically)
map <leader>ws <Action>(SplitHorizontally)
map <leader>wu <Action>(Unsplit)
map <leader>wm <Action>(MoveEditorToOppositeTabGroup)
" Modes 
map <leader>wd <action>(ToggleDistractionFreeMode)
map <leader>wz <action>(ToggleZenMode)
map <leader>wf <action>(ToggleFullScreen)

""" Code navigation/references
" gd - Go to declaration
" gD - Go to definition
" gc - Go to implementation
map gc <Action>(GotoImplementation)
" gr - Find usages
map gr <Action>(FindUsages)
" gt - Go to test
map gt <Action>(GotoTest)
" gC - Go to class
map gC <Action>(GotoClass)
" gs - Go to symbol
map gs <Action>(GotoSymbol)
" Jump between methods
map [[ <Action>(MethodUp)
map ]] <Action>(MethodDown)

""" Code refactoring
map <leader>rn <Action>(RenameElement)
map <leader>rm <Action>(ExtractMethod)
map <leader>rv <Action>(IntroduceVariable)
map <leader>rf <Action>(IntroduceField)
map <leader>rs <Action>(ChangeSignature)
map <leader>rr <Action>(Refactorings.QuickListPopupAction)

""" Code generation
map <leader>gg <Action>(GenerateCode)

""" Comments
map <leader>cb <Action>(CommentByBlockComment)
map <leader>cl <Action>(CommentByLineComment)

""" Collapse or expand
map zc <Action>(CollapseRegion)
map zo <Action>(ExpandRegion)
map <leader>zc <Action>(CollapseAllRegions)
map <leader>zo <Action>(ExpandAllRegions)

""" üõ† Build
""" üöÄ Run
""" üêû Debug
""" ‚õî Breakpoints